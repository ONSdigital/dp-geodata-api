// Package Swagger provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/pseudo-su/oapi-ui-codegen DO NOT EDIT.
package Swagger

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"github.com/getkin/kin-openapi/openapi3"
	"strings"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetOpenAPISpec returns the Swagger specification corresponding to the generated code
// in this file.
func GetOpenAPISpec() (*openapi3.T, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewLoader().LoadFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}
